# Documentation for ChatApp module
module ChatApp
  # Documentation for VERSION
  # @since 1.0
  VERSION: String | Symbol

  # Documentation for User class
  class User
    # Documentation for login attribute
    attr_reader login: String
    attr_reader email: String

    # Documentation for initialize method
    def initialize: (login: String, email: String) -> void
  end

  class Bot
    attr_reader name: String
    attr_reader email: String
    attr_reader owner: User

    def initialize: (name: String, owner: User) -> void

    private

    def split: (int index, ?String boundary, *args, **kwargs) -> String
  end

  class Message
    attr_reader id: String
    attr_reader string: String
    attr_reader from: User | Bot                     # `|` means union types: `#from` can be `User` or `Bot`
    attr_reader reply_to: Message?                   # `?` means optional type: `#reply_to` can be `nil`

    include ChatApp
    prepend ChatApp
    extend ChatApp

    def initialize: (from: User | Bot, string: String) -> void

    def reply: (from: User | Bot, string: String) -> Message
  end

  class Channel
    attr_reader name: String
    attr_reader messages: Array[Message]
    attr_reader users: Array[User]
    attr_reader bots: Array[Bot]

    def initialize: (name: String) -> void

    def each_member: () { (User | Bot) -> void } -> void  # `{` and `}` means block.
                   | () -> Enumerator[User | Bot, void]   # Method can be overloaded.
  end
end
